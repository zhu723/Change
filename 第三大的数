第三大的数
难度：简单
标签：数组
链接：力扣 https://leetcode-cn.com/problems/third-maximum-number/
题目
给定一个非空数组，返回此数组中第三大的数。如果不存在，则返回数组中最大的数。要求算法时间复杂度必须是O(n)。

示例 1
输入: [3, 2, 1]
输出: 1
解释: 第三大的数是 1.
示例 2
输入: [1, 2]
输出: 2
解释: 第三大的数不存在, 所以返回最大的数 2 .
示例 3
输入: [2, 2, 3, 1]
输出: 1
解释: 注意，要求返回第三大的数，是指第三大且唯一出现的数。
存在两个值为2的数，它们都排第二。
解答记录
用max_1、max_2、max_3分别记录最大值、第二大值、第三大值，题目要求复杂度为O(N)，那么最多一次遍历。

这里初始化三个最大值为无穷小 minVal = -10000000000LL 。

在遍历时还要注意判断 nums[i] 是否和max_1、max_2、max_3相等，若不判断，易造成将max_2赋值，但后续有小于max_2的数却不能赋给max_3。

int thirdMax(int* nums, int numsSize){
    int max_1 = -3e9;
    int max_2 = -3e9;
    int max_3 = -3e9;
    for(int i =0; i<numsSize; i++){
        if(nums[i]>max_1){
            max_3 = max_2;
            max_2 = max_1;
            max_1 = nums[i];
        }else if(nums[i] > max_2){
            max_3 = max_2;
            max_2 = nums[i];
        }else if(nums[i] > max_3){
            max_3 = nums[i];
        }
    }
    if(max_3 == -3e9) return max_1;
    return max_3;
}
返回信息：

用时 0 ms，击败 100% 的 C 提交；
内存消耗 6 MB，击败 15.00% 的 C 提交；
